version: '3.3'

services:
  mongo:
    image: 'mongo:4.0.5'
    container_name: katana-mongo
    restart: always
    volumes:
      - "mongo-datadb:/data/db"
      - "mongo-configdb:/data/configdb"

  katana-mngr:
    build: ./katana-mngr
    image: katana-mngr
    container_name: katana-mngr
    command: gunicorn -b 0.0.0.0:8000 --workers 3 --access-logfile - --reload "katana.app:create_app()"
    volumes:
      - "./katana-mngr:/katana"
    ports:
      - '8000:8000'
    restart: always
    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "udp://10.30.0.245:5140"
    #     tag: "SliceManager"
    #     syslog-format: "rfc5424"

  katana-cli:
    build: ./katana-cli
    image: katana-cli
    container_name: katana-cli-container
    command: >
      /bin/bash
    stdin_open: true
    tty: true
    network_mode: "host"
    volumes:
      - './katana-cli:/cli'

  swagger:
    image: 'swaggerapi/swagger-ui'
    container_name: swagger
    environment:
      - SWAGGER_JSON=/my_swagger/swagger.json
    ports:
      - '8001:8080'
    volumes:
      - './swagger:/my_swagger'

  postgres:
    env_file:
      - "./katana-ui/.env"
    image: "postgres:10.3-alpine"
    container_name: katana-postgres
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - "postgres:/var/lib/postgresql/data"

  katana-ui:
    build: ./katana-ui
    image: katana-ui
    container_name: katana-ui
    command: gunicorn -b 0.0.0.0:8080 --workers 3 --access-logfile - --reload "ui.app:create_app()"
    depends_on:
      - "postgres"
    env_file:
      - "./katana-ui/.env"
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - "./katana-ui:/app"

  # nginx reverse-proxy
  #
  # katana-nginx: 
  #   image: nginx:1.17-alpine
  #   container_name: katana-nginx
  #   depends_on:
  #     - "katana-mngr"
  #     - "katana-ui"
  #   volumes:
  #     - ./katana-nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 80:80
  #     - 443:443

volumes:
  mongo-datadb: {}
  mongo-configdb: {}
  postgres: {}
